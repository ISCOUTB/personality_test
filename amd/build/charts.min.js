define(["core/chartjs"], function(Chart) {
    return {
        init: function(mbtiData, aspectData, strings) {
            var colorPalette = {
                mbti: ["#005B9A","#FF8200","#FFB600","#00B5E2","#78BE20","#2C5234","#652C8F","#91268F","#D0006F","#AA182C","#8B0304","#E35205","#385CAD","#0077C8","#00263A","#00A9B7"],
                introversion: ["#005B9A","#FF8200"],
                sensacion: ["#00B5E2","#FFB600"],
                pensamiento: ["#78BE20","#652C8F"],
                juicio: ["#AA182C","#0077C8"]
            };
            
            console.log('MBTI Data:', mbtiData);
            console.log('Aspect Data:', aspectData);
            console.log('Strings:', strings);
            
            function createMBTIChart() {
                var ctx = document.getElementById("mbtiChart");
                if (ctx) {
                    ctx = ctx.getContext("2d");
                    var labels = [], values = [], colors = [];
                    var colorIndex = 0;
                    
                    // Asegurarse de que mbtiData sea un objeto
                    if (typeof mbtiData === 'string') {
                        try {
                            mbtiData = JSON.parse(mbtiData);
                        } catch (e) {
                            console.error('Error al analizar mbtiData:', e);
                        }
                    }
                    
                    Object.keys(mbtiData).forEach(function(type) {
                        if (mbtiData[type] > 0) {
                            labels.push(type);
                            values.push(mbtiData[type]);
                            colors.push(colorPalette.mbti[colorIndex % colorPalette.mbti.length]);
                            colorIndex++;
                        }
                    });
                    
                    // Si no hay datos, no mostrar ning√∫n dato de ejemplo
                    if (labels.length === 0) {
                        // No hay estudiantes que hayan realizado el test - no mostrar datos
                        document.getElementById('mbtiChart').parentNode.innerHTML = 
                            '<div class="alert alert-info text-center" style="margin-top: 20px;">' + 
                            strings.sin_datos_estudiantes + '</div>';
                        return;
                    }
                    
                    new Chart(ctx, {
                        type: "pie",
                        data: {
                            labels: labels,
                            datasets: [{
                                data: values,
                                backgroundColor: colors,
                                borderColor: "#ffffff",
                                borderWidth: 1,
                                hoverBorderWidth: 2,
                                hoverBorderColor: "#ffffff"
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: true,
                            plugins: {
                                title: {
                                    display: true,
                                    text: strings.titulo_distribucion_mbti,
                                    font: {
                                        family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
                                        size: 14,
                                        weight: "bold"
                                    },
                                    padding: {
                                        top: 10,
                                        bottom: 20
                                    }
                                },
                                legend: {
                                    position: "top",
                                    labels: {
                                        font: {
                                            family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
                                            size: 12
                                        },
                                        padding: 15
                                    }
                                },
                                tooltip: {
                                    backgroundColor: "rgba(0, 43, 73, 0.8)",
                                    titleFont: {
                                        size: 13
                                    },
                                    bodyFont: {
                                        size: 13
                                    },
                                    padding: 10,
                                    cornerRadius: 5,
                                    callbacks: {
                                        label: function(context) {
                                            var label = context.label || "";
                                            if (label) {
                                                label += ": ";
                                            }
                                            if (context.parsed !== null) {
                                                var total = context.chart.data.datasets[0].data.reduce(function(a, b) {
                                                    return a + b;
                                                }, 0);
                                                var percentage = Math.round((context.parsed / total) * 100);
                                                label += context.parsed + " (" + percentage + "%)";
                                            }
                                            return label;
                                        }
                                    }
                                }
                            }
                        }
                    });
                }
            }
            
            function createBarChart(elementId, title, labels, data, colors) {
                var ctx = document.getElementById(elementId);
                if (ctx) {
                    ctx = ctx.getContext("2d");
                    
                    console.log('Creating bar chart', elementId, title, labels, data, colors);
                    
                    // Verificar si tenemos datos, pero no usar datos de ejemplo si no hay
                    if (!data || !data.length || (data[0] === 0 && data[1] === 0)) {
                        // No hay estudiantes que hayan realizado el test - no mostrar datos
                        document.getElementById(elementId).parentNode.innerHTML = 
                            '<div class="alert alert-info text-center" style="margin-top: 10px;">' + 
                            strings.sin_datos_estudiantes + '</div>';
                        return;
                    }
                    
                    var maxValue = Math.max.apply(null, data);
                    var yMax = Math.ceil(maxValue * 1.1);
                    
                    function adjustColor(color, percent) {
                        var r = parseInt(color.substring(1, 3), 16);
                        var g = parseInt(color.substring(3, 5), 16);
                        var b = parseInt(color.substring(5, 7), 16);
                        
                        r = parseInt(r * (100 + percent) / 100);
                        g = parseInt(g * (100 + percent) / 100);
                        b = parseInt(b * (100 + percent) / 100);
                        
                        r = (r < 255) ? r : 255;
                        g = (g < 255) ? g : 255;
                        b = (b < 255) ? b : 255;
                        
                        r = Math.max(0, r);
                        g = Math.max(0, g);
                        b = Math.max(0, b);
                        
                        var rr = ((r.toString(16).length == 1) ? "0" + r.toString(16) : r.toString(16));
                        var gg = ((g.toString(16).length == 1) ? "0" + g.toString(16) : g.toString(16));
                        var bb = ((b.toString(16).length == 1) ? "0" + b.toString(16) : b.toString(16));
                        
                        return "#" + rr + gg + bb;
                    }
                    
                    var borderColors = [];
                    var hoverBgColors = [];
                    var hoverBorderColors = [];
                    
                    for (var i = 0; i < colors.length; i++) {
                        borderColors.push(adjustColor(colors[i], -20));
                        hoverBgColors.push(adjustColor(colors[i], 10));
                        hoverBorderColors.push(adjustColor(colors[i], -30));
                    }
                    
                    new Chart(ctx, {
                        type: "bar",
                        data: {
                            labels: labels,
                            datasets: [{
                                label: strings.num_estudiantes_header,
                                data: data,
                                backgroundColor: colors,
                                borderColor: borderColors,
                                borderWidth: 1,
                                borderRadius: 3,
                                hoverBackgroundColor: hoverBgColors,
                                hoverBorderColor: hoverBorderColors,
                                barPercentage: 0.6,
                                categoryPercentage: 0.8
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: true,
                            animation: {
                                duration: 1500,
                                easing: "easeOutQuart"
                            },
                            layout: {
                                padding: {
                                    top: 5,
                                    right: 10,
                                    bottom: 5,
                                    left: 10
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        stepSize: 1,
                                        precision: 0,
                                        font: {
                                            size: 11
                                        }
                                    },
                                    max: yMax,
                                    grid: {
                                        color: "rgba(0, 43, 73, 0.05)",
                                        lineWidth: 1
                                    }
                                },
                                x: {
                                    grid: {
                                        display: false
                                    },
                                    ticks: {
                                        font: {
                                            size: 11
                                        }
                                    }
                                }
                            },
                            plugins: {
                                title: {
                                    display: true,
                                    text: title,
                                    font: {
                                        family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
                                        size: 14,
                                        weight: "bold"
                                    },
                                    padding: {
                                        top: 10,
                                        bottom: 20
                                    }
                                },
                                legend: {
                                    display: false
                                },
                                tooltip: {
                                    backgroundColor: "rgba(0, 43, 73, 0.8)",
                                    titleFont: {
                                        size: 13
                                    },
                                    bodyFont: {
                                        size: 13
                                    },
                                    padding: 10,
                                    cornerRadius: 5,
                                    callbacks: {
                                        label: function(context) {
                                            return strings.num_estudiantes_header + ": " + context.parsed.y;
                                        },
                                        title: function(context) {
                                            return context[0].label;
                                        }
                                    }
                                }
                            }
                        }
                    });
                }
            }
            
            // Crear las gr√°ficas
            createMBTIChart();
            
            createBarChart(
                "generalTrendChart",
                strings.introversion_extroversion,
                [strings.Introvertido, strings.Extrovertido],
                [aspectData.Introvertido || 0, aspectData.Extrovertido || 0],
                colorPalette.introversion
            );
            
            createBarChart(
                "infoProcessingChart",
                strings.sensacion_intuicion,
                [strings.Sensing, strings.Intuicion],
                [aspectData.Sensing || 0, aspectData.Intuici√≥n || 0],
                colorPalette.sensacion
            );
            
            createBarChart(
                "decisionMakingChart",
                strings.pensamiento_sentimiento,
                [strings.Pensamiento, strings.Sentimiento],
                [aspectData.Pensamiento || 0, aspectData.Sentimiento || 0],
                colorPalette.pensamiento
            );
            
            createBarChart(
                "organizationChart",
                strings.juicio_percepcion,
                [strings.Juicio, strings.Percepcion],
                [aspectData.Juicio || 0, aspectData.Percepci√≥n || 0],
                colorPalette.juicio
            );
        }
    };
}); 